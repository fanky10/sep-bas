<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" 
		xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop" 
		xmlns:jpa="http://www.springframework.org/schema/data/jpa" xsi:schemaLocation=" 
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">
		
	<tx:annotation-driven transaction-manager="transactionManager" />
	<context:annotation-config />
	<context:component-scan base-package="wcpackage" />
	<context:component-scan base-package="com.genfersco.sepbas.app.services">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<context:component-scan base-package="com.genfersco.sepbas.app.services.impl">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<jpa:repositories base-package="com.genfersco.sepbas.domain.repository" />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${hibernate.driverClassName}" />
		<property name="url" value="${hibernate.url}" />
		<property name="username" value="${hibernate.username}" />
		<property name="password" value="${hibernate.password}" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
	</bean>


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="loadTimeWeaver">
			<bean
				class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
		</property>
		<property name="persistenceUnitName" value="wctemplatePU"></property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
	</bean>



	<!-- Every placeholder goes through the following resolution process. Once 
		a value is found it’s set and the next placeholder is resolved: (optional) 
		Property value specified as a system or environment property; useful for 
		overriding specific placeholders (e.g. -Djdbc.host=devdb / -Djdbc.username=carbon5) 
		(optional) Properties file located by the system/environment variable called 
		“config”; useful for externalizing configuration. All URL types are supported 
		(e.g. -Dconfig=c://hmc.properties). (optional) Properties file identified 
		by classpath:local-config.properties; useful for specific developer overrides. 
		(required) Properties file identified by classpath:configuration.properties, 
		which contains default settings for our application. the valueSeparator, 
		value = ? is for default values like ${myBeanValue?DefaultValue} -->
	<bean id="dataConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="valueSeparator" value="?" />
		<property name="locations">
			<list>
				<value>classpath:db-config.properties</value>
			</list>
		</property>
	</bean>

</beans>